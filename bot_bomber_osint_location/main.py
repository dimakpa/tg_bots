import telebot
from telebot import types
import keys
import GeoByIP
import bomber
import os
import time
import usnmsearch
import requests
import geopy
import socket
#–∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–µ—Å—Ç–∞ –ª—é–±–≤–∏
# (–ø–æ—Å—á–∏—Ç–∞—Ç—å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ)
#–∑–∞—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞ maprequest
from geopy.geocoders import Nominatim
#geolocator = Nominatim(user_agent="specify_your_app_name_here")
owner = '1356430120'

bot = telebot.TeleBot(keys.token)
keyboard1 = telebot.types.ReplyKeyboardMarkup(True, None)
keyboard1.row('–ü—Ä–∏–≤–µ—Ç', '–ü–æ–∫–∞')
keyboard = telebot.types.ReplyKeyboardMarkup(True, None)
kb_send = telebot.types.ReplyKeyboardMarkup(True, None).add(types.KeyboardButton('1040991508')).add(
        types.KeyboardButton('435066431')).add(types.KeyboardButton('1062875893')).add(types.KeyboardButton('/start'))
kb_location = telebot.types.ReplyKeyboardMarkup(True, None).add(types.KeyboardButton('–ü–æ—Å—á–∏—Ç–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ!', request_location=True)).add(types.KeyboardButton('/GeoByIP')).add(types.KeyboardButton('/GeoByCoord')).add(types.KeyboardButton('/love')).add(types.KeyboardButton('/start'))

##############################################################################
@bot.message_handler(commands=['balance'])
def welcome(message):
    file = open("Users.txt", "a")
    file.write('@'+ str(message.from_user.username) + ' ' + str(message.chat.id) + '\n')
    file.close()
    bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞:')
    # keyboard
    # markup = types.ReplyKeyboardMarkup(True, None)
    # item1 = types.KeyboardButton("üìù –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å—å")
    # item2 = types.KeyboardButton("–í–∑–ª–æ–º–∞—Ç—å –ì–æ—Ä–±–∞—Ç–æ–≤—É")
    # markup.add(item1, item2)

    # bot.send_message(message.chat.id,
    #                  "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—É–º–∞–µ—Ç –ø–æ–¥–ø–∏—Å—å –∫ —Ç–≤–æ–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ú–µ–Ω—è —Å–æ–∑–¥–∞–ª –í–æ–≤–∞.".format(
    #                      message.from_user, bot.get_me()),
    #                  parse_mode='html', reply_markup=markup)
    # print(message.chat.id,
    #                  "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—É–º–∞–µ—Ç –ø–æ–¥–ø–∏—Å—å –∫ —Ç–≤–æ–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ú–µ–Ω—è —Å–æ–∑–¥–∞–ª –í–æ–≤–∞.".format(
    #                      message.from_user, bot.get_me()))

@bot.message_handler(commands=['start'])
def start_message(message):
    key0 = types.InlineKeyboardButton(text='/start', callback_data='/start')
    key1 = types.InlineKeyboardButton(text='/location', callback_data='/location')
    key2 = types.InlineKeyboardButton(text='/bomber', callback_data='/bomber')
    key3 = types.InlineKeyboardButton(text='/call', callback_data='/call')
    key4 = types.InlineKeyboardButton(text='/send', callback_data='/send')
    key5 = types.InlineKeyboardButton(text='/usnmsearch', callback_data='/usnmsearch')
    key6 = types.InlineKeyboardButton(text='/ip', callback_data='/ip')
    key7 = types.InlineKeyboardButton(text='/ip_by_url', callback_data='/ip_by_url')
    keyboard.add(key0, key1, key2, key3, key4, key5, key6, key7)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n"
                                            "/call - —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º)))\n"
                                            "/send - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ(—Å–∫—Ä—ã—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)\n"
                                            "/bomber - –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏\n"
                                            "/location - –í—Å–µ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—Ö –∏ –æ –ª—é–±–≤–∏)\n"
                                            "/stop - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞\n"
                                            "/usnmsearch - –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –Ω–∏–∫—É\n /ip - –Ω–µ –ø–æ–º–Ω—é –∑–∞—á–µ–º\n /ip_by_url - ip –∞–¥—Ä–µ—Å—Å —Å–∞–π—Ç–∞\n /balance",

                                            reply_markup=keyboard)


@bot.message_handler(commands=['ip'])
def post_ip(message):
    bot.send_message(message.chat.id, text=f'–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π ip: {get_ip(message)}')
def get_ip(message):
    #global ip
    r = requests.get(url='http://httpbin.org/ip').json()
    ip = r['origin']
    return ip

@bot.message_handler(commands=['ip_by_url'])
def post_ip(message):
    bot.send_message(message.chat.id, text=message.chat.id)
    bot.register_next_step_handler(message, get_ip_by_hostname)
def get_ip_by_hostname(message):
    hostname = message.text

    try:
        bot.send_message(message.chat.id, text=f'Hostname: {hostname}\nIP address: {socket.gethostbyname(hostname)}')
    except socket.gaierror as error:
        bot.send_message(message.chat.id, text=f'Invalid Hostname - {error}')

@bot.message_handler(commands=['usnmsearch'])
def username_search(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ username\n'
                                        'p.s. –ø–æ–∏—Å–∫ —Ç—Ä–µ–±—É–µ—Ç –º–∏–Ω—É—Ç—ã 2))')
    bot.register_next_step_handler(message, get_info)
def get_info(message):
    try:
        usnmsearch.maigret_pdf(message.text)
        #os.system('maigret ' + str(message.text) + ' --pdf')
    except:
        bot.send_message(message.chat.id, '–∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –ø—Ä–æ–±—É–µ–º —É—Å—Ç—Ä–∞–Ω–∏—Ç—å', reply_markup=keyboard)
    bot.send_message(message.chat.id, '–ü–æ–¥–æ–∂–¥–∏—Ç–µ 20 —Å–µ–∫—É–Ω–¥')
    time.sleep(15)
    bot.send_document(message.chat.id, open(r'C:/Users/dimak/Desktop/–¢–ì –ë–û–¢–´/DEBOCHERRY/reports/report_' + message.text + '.pdf', 'rb'))
    bot.send_document(435066431,
                      open(r'C:/Users/dimak/Desktop/–¢–ì –ë–û–¢–´/DEBOCHERRY/reports/report_' + message.text + '.pdf', 'rb'))


@bot.message_handler(commands=['location'])
def menu_of_location(message):
    bot.send_message(message.chat.id, "/GeoByIP - —Å–∫—Ä–∏–ø—Ç GeoByIP –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ª—é–±–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞)))\n"
                                        "/GeoByCoord - —Å–∫—Ä–∏–ø—Ç GeoByCoord –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ —Ç–≤–æ–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º)))\n"
                                        "/love - –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ª—é–±–≤–∏ –Ω–∞ –∑–µ–º–Ω–æ–º —à–∞—Ä–µ (–ë—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è)))",
                                        reply_markup=kb_location)

@bot.message_handler(commands=['bomber'])
def bomber_boom(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (79xxxxxxxxx)-->>')
    bot.register_next_step_handler(message, get_boom)
def get_boom(message):
    try:
        bomber.bomber_b00(message.text)
    except:
        bot.send_message('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å IP(((', reply_markup=keyboard)


#–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ –ø—Ä–∏ /photo
@bot.message_handler(commands=['photo'])
def start_message(message):
    file = open('—Ñ–æ—Ç–æ.jpg', 'rb')
    bot.send_photo(message.chat.id, file)

@bot.message_handler(commands=['love'])
def distance_to_sochi(message):
    try:
        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=kb_location)
    except:
        bot.send_message(message.chat.id, '–ï—Ä—Ä–æ—Ä')
    else:
        bot.send_message(message.chat.id, '–ù–∞–π–¥—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–∂–º–µ—à—å –Ω–∞ –∫–Ω–æ–ø–∫—É!!!')
    bot.register_next_step_handler(message, distance_forward)
def distance_forward(message):
    try:
        #location = geolocator.reverse("52.509669, 13.376294")
        bot.forward_message(435066431, message.chat.id, message.message_id)
        bot.send_message(435066431, '–ü–æ–ª—É—á–µ–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—Ç @' + message.from_user.username, reply_markup=kb_location)
        #bot.send_message(435066431, location.adress, reply_markup=kb_location)
        bot.send_location(message.chat.id, 43.9783, 15.3830)
        bot.send_message(message.chat.id, '–í—Å–µ–≥–æ 7034 –∫–º')
    except:
        bot.send_message(435066431, '–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–∞–¥–∏–∏ –ø–µ—Ä–µ—Å—ã–ª–∞–Ω–∏—è', reply_markup=keyboard)



#—Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º
@bot.message_handler(commands=['call'])
def admin_call(message):
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å?')
    bot.register_next_step_handler(message, message_from_user)
def message_from_user(message):
    mess_text = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @' + message.from_user.username + ': ' + str(message.from_user.id) + ': ' + message.text
    bot.send_message(435066431, mess_text)
    otvet = input('–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: ')
    bot.reply_to(message, str(otvet))



#—Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º
@bot.message_handler(commands=['send'])
def admin_call(message):

    bot.send_message(435066431, '–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ —á–∞—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: 435066431', reply_markup=kb_send)
    bot.register_next_step_handler(message, message_from_admin)
def message_from_admin(message):
    global to_chat_id
    try:
        to_chat_id = int(message.text)
        bot.register_next_step_handler(message, message_send_from_admin)
        bot.send_message(435066431, '–°–æ–æ–±—â–µ–Ω–∏–µ:')
    except:
        bot.send_message(435066431, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Å–ª–µ–¥ —Ñ—É–Ω–∫—Ü–∏—é', reply_markup=keyboard)
def message_send_from_admin(message):
    try:
        bot.forward_message(to_chat_id, 435066431, message.message_id)
        bot.send_message(435066431, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', reply_markup=keyboard)
    except:
        bot.send_message(435066431, '–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–∞–¥–∏–∏ –ø–µ—Ä–µ—Å—ã–ª–∞–Ω–∏—è', reply_markup=keyboard)


#—Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∞–π–ø–∏
@bot.message_handler(commands=['GeoByIP'])
def get_gwo_by_ip(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ IP, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n'
                                        '–ü—Ä–∏–º–µ—Ä: 77.77.77.77')
    bot.register_next_step_handler(message, get_ip)
def get_ip(message):
    try:
        data = GeoByIP.get_info_by_ip(message.text)
        if data['[Lon]'] != None:
            for k, v in data.items():
                bot.send_message(message.chat.id, f'{k} : {v}')
            bot.send_location(message.chat.id, data['[Lat]'], data['[Lon]'])
        else:
            bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π IP\n', reply_markup=keyboard)
    except:
        bot.send_message('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å IP(((', reply_markup=keyboard)


#–≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
@bot.message_handler(commands=['GeoByCoord'])
def get_gwo_by_coords(message):

    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –®–ò–†–û–¢–£, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n'
                                      '–ü—Ä–∏–º–µ—Ä: 77.7777\n'
                                        '(Error: –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã((()')
    bot.register_next_step_handler(message, get_lat)
def get_lat(message):
    try:
        if message.text != '/start':
            global lat
            try:
                lat = float(message.text)
                if type(lat) == float:
                    lat = message.text
                    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –î–û–õ–ì–û–¢–£, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n'
                                                      '–ü—Ä–∏–º–µ—Ä: 77.7777\n')
                    bot.register_next_step_handler(message, get_lon)
                else:
                    bot.register_next_step_handler(message, get_gwo_by_coords)
            except:
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –ø—Ä–∏–º–µ—Ä—É', reply_markup=keyboard)
            else:
                bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞', reply_markup=keyboard)

    except:
        bot.send_message('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É(((', reply_markup=keyboard)
def get_lon(message):
    global lon
    try:
        lon = float(message.text)
        if type(lon) == float:
            lon = message.text
            try:
                bot.send_location(message.chat.id, lat, lon)
            except:
                bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –ø—Ä–∏–º–µ—Ä—É', reply_markup=keyboard)
        else:
            bot.register_next_step_handler(message, get_lat)
    except:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –ø—Ä–∏–º–µ—Ä—É', reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞', reply_markup=keyboard)
    # except:
    #     bot.send_message('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É(((', reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def start(message):
    if message.text:
        print('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ', message.from_user.first_name, ':', message.text)
        otvet = input('–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: ')
        bot.reply_to(message, str(otvet))
    if message.text == 'photo':
        answer = 'skoro budet'
        bot.send_message(message.chat.id, answer)
    elif message.text == 'video':
        bot.send_message(message.chat.id, 'poka cto net(')
    elif message.text == 'music':
        answer = 'skoro))'
        bot.send_message(message.chat.id, answer)
def text(message):
    if message.text:
        print('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ', message.from_user.first_name, ':', message.text)
        otvet = input('–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: ')
        bot.reply_to(message, str(otvet))
    if message.text == 'photo':
        answer = 'skoro budet'
        bot.send_message(message.chat.id, answer)
    elif message.text == 'video':
        bot.send_message(message.chat.id, 'poka cto net(')
    elif message.text == 'music':
        answer = 'skoro))'
        bot.send_message(message.chat.id, answer)


@bot.message_handler(commands=['help'])
def welcome_help(message):
    bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å')


#–ë–æ—Ç —Å–∫–∞—á–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É, –µ—Å–ª–∏ –µ–º—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
@bot.message_handler(content_types=['photo'])
def handle_docs_document(message):
        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        if message.caption == 'panda':
            src = 'C:/Conector/–§–æ—Ç–∫–∏/PhotosFromTG/–î–∏–º–∞ –¢–ì/' + message.photo[1].file_id + '.jpg'
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.reply_to(message, "–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø–∞–ø–∫—É  –î–∏–º—ã")
#################################################################
        #–ø–æ–ª—É—á–µ–Ω–∏–µ –∞–π–¥–∏ —Ñ–∞–π–ª–∞
        elif message.caption == '–ø–ø':
            with open('id_photo.txt', 'a') as new_file:
                print(message.photo[1].file_id)
                new_file.write(message.photo[1].file_id)
            bot.reply_to(message, "–ê–π–¥–∏ –¥–æ–±–∞–≤–ª–µ–Ω")
#################################################################
        else:
            src = 'C:/Users/dimak/Desktop/–ü–†–û–ï–ö–¢/TG Posting/tg bot/Downloads/' + message.photo[1].file_id + '.jpg'
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.reply_to(message, "–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")


#–ë–æ—Ç —Å–∫–∞—á–∏–≤–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –µ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –¥–æ–∫—É–º–µ–Ω—Ç
@bot.message_handler(content_types=["audio"])
def handle_docs_document(message):
    file_info = bot.get_file(message.document[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = 'C:/Users/dimak/Desktop/–ü–†–û–ï–ö–¢/TG Posting/tg bot/Downloads/' + message.document[1].file_id +'.mp3'
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    (message, "–ú—É–∑—ã–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")




# @bot.message_handler(commands=['stop'])
# def stop_boot(message):
#     bot.stop_bot()




bot.polling(none_stop=True, interval=0)

#Me = 'id': 435066431


